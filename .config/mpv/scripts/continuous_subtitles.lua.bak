-- mpv script to continuously display subtitles with the same text
-- and adjust subtitle timing to remove small gaps/overlaps.

local function are_subtitles_close(sub1, sub2)
  if not sub1 or not sub2 then
    return false
  end
  local diff = math.abs(sub1.start - sub2.start)
  return diff < 5.0
end

local function adjust_subtitle_timing(subs)
  if not subs or #subs < 2 then
    return subs
  end

  local adjusted_subs = {subs[1]}
  for i = 2, #subs do
    local prev_sub = adjusted_subs[#adjusted_subs]
    local current_sub = subs[i]
    if are_subtitles_close(prev_sub, current_sub) then
      -- Remove gap/overlap
      if current_sub.start < prev_sub.endTime then
          -- overlap
          prev_sub.endTime = math.max(prev_sub.endTime, current_sub.endTime)
      else
          --gap
          prev_sub.endTime = current_sub.endTime
      end
    else
      table.insert(adjusted_subs, current_sub)
    end
  end
  return adjusted_subs
end

local function handle_subtitle_text(sub_text)
  local subs = mp.get_property_native("sub-text") or {}

  --check if it is a table of subtitles
  if type(subs) ~= "table" then
    return
  end
  --filter subtitles that have the same text
  local same_text_subs = {}
  for _, sub in ipairs(subs) do
    if sub.text == sub_text then
      table.insert(same_text_subs, {start = sub.start, endTime = sub.endTime, text = sub.text})
    end
  end

  --adjust subtitles
  local adjusted_subs = adjust_subtitle_timing(same_text_subs)

  --display the subs
  if #adjusted_subs > 0 then
    local start_time = adjusted_subs[1].start
    local end_time = adjusted_subs[#adjusted_subs].endTime
    mp.osd_message(sub_text, end_time - start_time)
  end
end

local last_sub_text = nil

mp.observe_property("sub-text", "native", function(_, subs)
  if type(subs) ~= "table" or #subs == 0 then
    last_sub_text = nil
    return
  end

  local current_sub_text = subs[1].text

  if last_sub_text == current_sub_text then
    handle_subtitle_text(current_sub_text)
  else
    last_sub_text = current_sub_text
    handle_subtitle_text(current_sub_text)
  end
end)
