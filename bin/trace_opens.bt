#!/usr/bin/env bpftrace

BEGIN
{
    // Print the header row
    printf("%-18s %-6s %-16s %-15s %-6s %s\n",
           "TIME", "PID", "COMM", "EVENT", "FD", "PATH/ARG");
}

/* ---------------- OPEN family: Capture filename/pathname on enter ---------------- */
tracepoint:syscalls:sys_enter_open,
tracepoint:syscalls:sys_enter_openat,
tracepoint:syscalls:sys_enter_openat2
{
    @tmp[pid] = str(args->filename);
}

tracepoint:syscalls:sys_enter_creat
{
    @tmp[pid] = str(args->pathname);
}

/* ---------------- OPEN family: Process results on exit ---------------- */
tracepoint:syscalls:sys_exit_open,
tracepoint:syscalls:sys_exit_openat,
tracepoint:syscalls:sys_exit_openat2,
tracepoint:syscalls:sys_exit_creat
/ @tmp[pid] != "" /
{
    $fname = @tmp[pid];
    delete(@tmp[pid]);
    $fd = (int32)args->ret;

    if ($fd >= 0) {
        @fdmap[pid, $fd] = $fname;
        printf("%-18s %-6d %-16s %-15s %-6d %s\n",
               strftime("%H:%M:%S", nsecs/1000000000), pid, comm, "OPEN", $fd, $fname);
    } else {
        printf("%-18s %-6d %-16s %-15s %-6s %s (err=%d)\n",
               strftime("%H:%M:%S", nsecs/1000000000), pid, comm, "OPEN_FAIL", "-", $fname, $fd);
    }
}


tracepoint:syscalls:sys_enter_close
{
    $fd = (int32)args->fd;
    $name = @fdmap[pid, $fd];

    // Use if/else for guaranteed string assignment.
    $path_arg = "<unknown>";
    if ($name != "") {
        $path_arg = $name;
        delete(@fdmap[pid, $fd]);
    }

    printf("%-18s %-6d %-16s %-15s %-6d %s\n",
           strftime("%H:%M:%S", nsecs/1000000000), pid, comm, "CLOSE", $fd, $path_arg);
}
