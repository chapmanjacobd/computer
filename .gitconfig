# This is Git's per-user configuration file.
[user]
    name = Jacob Chapman
    email = 7908073+chapmanjacobd@users.noreply.github.com
	signingkey = /home/xk/.ssh/id_ed25519.pub
[rerere]
    enabled = true
    autoupdate = true
[push]
    default = upstream
    autosetupremote = true
    followTags = true
    #useForceIfIncludes = true
[core]
    pager = delta --syntax-theme GitHub --max-line-length 1024  # --keep-plus-minus-markers
    excludesfile = /home/xk/.gitignore_global
    preloadindex = true
    fscache = true
    eol = lf
    autocrlf = false
    logallrefupdates = true
    attributesfile = /home/xk/.gitattributes_global
[transfer]
    fsckobjects = true
[fetch]
    fsckobjects = true
[receive]
    fsckObjects = true
[interactive]
    diffFilter = delta --color-only
[diff]
    algorithm = histogram
    indentHeuristic = true
    tool = delta
    difftool = delta
    colormoved = zebra
    context = 5
    mnemonicPrefix = true
[delta]
    navigate = true
[diff "sqlite3"]
    binary = true
    textconv = "echo .dump | sqlite3"
[color]
    ui = auto
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[color "diff"]
    meta = yellow
    commit = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color.grep]
    match = red normal bold
    filename = magenta
    lineNumber = green
    column = green
    separator = cyan
[pull]
    rebase = merges
[rebase]
    autoStash = true
    autosquash = true
    updateRefs = true
    missingCommitsCheck = warn
[init]
    defaultBranch = main
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[credential]
    helper = cache
[help]
    autocorrect = prompt
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
[merge]
    autoStash = true
    conflictstyle = zdiff3
    summary = true
    diffstat = true
    log = 50
[log]
    date = relative-local
[alias]
    create = !git switch $(git config --get init.defaultBranch) && git switch -c
    ccp = "!f() { git create \"$1\"; shift; git cherry-pick \"$@\"; }; f"
    delete = branch -D
    rename = branch -M
    grame = "!r() { git grep -n $1 $2 | while IFS=: read i j k; do echo $i; git blame -f -L $j,$j $i; done }; r"
    startover = "!f() { git reset --hard $(git merge-base main HEAD); git rebase main; }; f"
    diffbranch = diff --ignore-all-space -U0 DEV...HEAD
    branches = for-each-ref --sort='authordate' --format='%(authordate:short), %(authorname), %(refname:lstrip=2)'
    unmerged = for-each-ref --sort='authordate' --format='%(authordate:short), %(authorname), %(refname:lstrip=2)' --no-merged
    conflicts = !git diff --name-only --diff-filter U
    edit-conflicts = !git conflicts | xargs -r $(git var GIT_EDITOR)
    history = log --follow -p --
    utccommit = !git commit --date="$(date --utc +%Y-%m-%dT%H:%M:%S%z)"
    amend = !fish -c git_amend
    lg = log --color --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit
    keep = "!f() { dir=${1:-.}; printf \\*\"\\n\"!.gitignore > \"$dir/.gitignore\"; git add \"$dir\"; }; f"
    divergence = log --reverse --oneline ..main
    tagged = describe --tags --exact-match
    tags = tag --sort=creatordate --contains
    reword = commit --amend -m
    pushf = push --force-with-lease --force-if-includes
    head = show HEAD
    remotes = remote -v
    localignore = !printf \"%s\\n\" \"$@\" >> .git/info/exclude
    ignore = !printf \"%s\\n\" \"$@\" >> .gitignore
[advice]
    skippedCherryPicks = false
[branch]
    sort = -committerdate
[tag]
    sort = -taggerdate
[commit]
    template = /home/xk/.gitmessage
    verbose = true
	gpgSign = true
[receive "fsck"]
    zeroPaddedFilemode = warn
[fetch "fsck"]
    zeroPaddedFilemode = ignore
[gpg]
	format = ssh
